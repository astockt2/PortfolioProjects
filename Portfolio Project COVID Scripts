SELECT location,date,total_cases,new_cases,total_deaths,population
FROM covid_deaths
ORDER BY 1,2

-- looking at Total cases vs total deaths
-- Shows likelihood of dying if you contract covid in your country

SELECT location,date,total_cases,total_deaths, (total_deaths/total_cases)*100 AS death_percentage
FROM covid_deaths
WHERE location like '%states%'
WHERE continent IS NOT NULL
ORDER BY 1,2

-- Looking at total cases vs population

SELECT location,date,total_cases,total_deaths,population, (total_cases/population)*100 as contracted_covid
FROM covid_deaths
WHERE location = 'United States'
WHERE continent IS NOT NULL
ORDER BY 1,2

-- Look at countries with highest infection rate compared to population

SELECT location, population, MAX(total_cases) as highest_infection_count, MAX((total_cases/population)*100) as percent_of_population
FROM covid_deaths
--WHERE location = 'United States'
WHERE continent IS NOT NULL
GROUP BY location, population
ORDER BY percent_of_population desc

-- Showing countries with the highest death count per population

SELECT location, MAX(cast(total_deaths as int)) as total_death_count
FROM covid_deaths
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY total_death_count desc

-- Break things down by continent 

-- Showing continents with the highest death count per population

SELECT location, MAX(cast(total_deaths as int)) as total_death_count
FROM covid_deaths
WHERE continent IS NULL
GROUP BY location
ORDER BY total_death_count desc

-- Global numbers

SELECT SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, (SUM(cast(new_deaths as int))/SUM(new_cases))*100  as death_percentage
FROM covid_deaths
where continent IS NOT NULL
--GROUP BY date
ORDER BY 1,2

-- Join deaths table and vaccinations table
-- Looking at total population vs vaccinations

SELECT * 
FROM covid_deaths dea
JOIN covid_vaccinations vac
ON dea.location = vac.location
and dea.date = vac.date

-- Looking at total population vs vaccinations

SELECT dea.continent, dea.location, dea.date,dea.population, vac.new_vaccinations
FROM covid_deaths dea
JOIN covid_vaccinations vac
ON dea.location = vac.location
and dea.date = vac.date
WHERE dea.continent IS NOT NULL
ORDER BY 2,3

-- Total population vs vaccination

SELECT dea.continent, dea.location, dea.date,dea.population, vac.new_vaccinations
, SUM(CAST(vac.new_vaccinations as INT)) OVER(PARTITION by dea.location ORDER BY dea.location, dea.date) AS roling_people_vaccinated
, rolling_people_vaccinated
FROM covid_deaths dea
JOIN covid_vaccinations vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent IS NOT NULL
ORDER BY 2,3

-- Use CTE


with pop_vs_vac (continent, location, date, population,new_vaccinations, rolling_people_vaccinated)
AS
(SELECT dea.continent, dea.location, dea.date,dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations as INT)) OVER(PARTITION by dea.location ORDER BY dea.location, dea.date) AS roling_people_vaccinated
FROM covid_deaths dea
JOIN covid_vaccinations vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent IS NOT NULL
--ORDER BY 2,3)
 )
SELECT *, (rolling_people_vaccinated/population)*100 as percent_of_population_vaccinated
FROM pop_vs_vac

 


-- With temp table
DROP TABLE IF EXISTS percent_population_vaccinated;

CREATE TEMP TABLE percent_population_vaccinated
(
	continent varchar(255),
	location varchar(255),
	date date,
	population numeric,
	new_vaccinations numeric,
	rolling_people_vacinnated numeric
);

--INSERT INTO percent_population_vaccinated
SELECT dea.continent, dea.location, dea.date,dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations as INT)) OVER(PARTITION by dea.location ORDER BY dea.location, dea.date) AS roling_people_vaccinated
FROM covid_deaths dea
JOIN covid_vaccinations vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent IS NOT NULL
;
--ORDER BY 2,3

SELECT * --, (percent_population_vaccinated.rolling_people_vaccinated/percent_population_vaccinated.population)*100
FROM percent_population_vaccinated

-- Creating view to store data for later visualization

CREATE VIEW percent_population_vaccinated as
SELECT dea.continent, dea.location, dea.date,dea.population, vac.new_vaccinations
, SUM(CAST(vac.new_vaccinations as INT)) OVER(PARTITION by dea.location ORDER BY dea.location, dea.date) AS roling_people_vaccinated
--, rolling_people_vaccinated
FROM covid_deaths dea
JOIN covid_vaccinations vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent IS NOT NULL
--ORDER BY 2,3


